Index: src/main/java/edu/sjsu/cs151/JDBC.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.sjsu.cs151;\n\nimport java.sql.*;\nimport org.json.simple.JSONArray;\nimport org.json.simple.JSONObject;\nimport org.json.simple.parser.JSONParser;\nimport org.json.simple.parser.ParseException;\nimport java.io.FileReader;\nimport java.io.IOException;\n\npublic class JDBC {\n\n    // instance variables\n    private static final String DATABASE_URL = \"jdbc:mysql://localhost:3306/\";\n    private static final String USER = \"root\";\n    private static final String PASSWORD = \"password\";\n    public static Connection conn = null;\n    private Statement statement = null;\n    private PreparedStatement prepareStatement = null;\n    private ResultSet rs = null;\n\n    // default constructor\n    JDBC(){}\n\n    // getters\n    public Connection getConn() {\n        return conn;\n    }\n\n    public Statement getStatement() {\n        return statement;\n    }\n\n    public PreparedStatement getPrepareStatement() {\n        return prepareStatement;\n    }\n\n    public ResultSet getRs() {\n        return rs;\n    }\n\n    // setters\n    public void setConn(Connection conn) {\n        this.conn = conn;\n    }\n\n    public void setStatement(Statement statement) {\n        this.statement = statement;\n    }\n\n    public void setPrepareStatement(PreparedStatement prepareStatement) {\n        this.prepareStatement = prepareStatement;\n    }\n\n    public void setRs(ResultSet rs) {\n        this.rs = rs;\n    }\n\n    public void connect() throws SQLException {\n        // Method connects to database\n        // Register JDBC driver\n        try {\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        }\n\n        // Open a connection\n        conn = DriverManager.getConnection(DATABASE_URL, USER, PASSWORD);\n    }\n\n    public void createDatabase() throws SQLException, IOException, ParseException {\n        // Method creates databases and tables\n        connect();\n\n        // Execute a query\n//        Statement statement = conn.createStatement();\n        this.statement = conn.createStatement();\n        this.statement.executeUpdate(\"DROP SCHEMA IF EXISTS student\");\n        this.statement.executeUpdate(\"CREATE SCHEMA student\");\n        this.statement.executeUpdate(\"USE student\");\n\n        String createLocationTable = \"create table LOCATIONS \"\n                + \"(LOCATION_ID int NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT, \"\n                + \"location varchar(255) UNIQUE\"\n                + \")\";\n\n        this.statement.executeUpdate(\"DROP TABLE IF EXISTS LOCATIONS\");\n        this.statement.executeUpdate(createLocationTable);\n\n        String createCostTable = \"create table COSTS \"\n                + \"(COST_ID int NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT, \"\n                + \"cost varchar(255) UNIQUE\"\n                + \")\";\n\n        this.statement.executeUpdate(\"DROP TABLE IF EXISTS COSTS\");\n        this.statement.executeUpdate(createCostTable);\n\n        String createCuisineTable = \"create table CUISINES \"\n                + \"(CUISINE_ID int NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT, \"\n                + \"cuisine varchar(255) UNIQUE\"\n                + \")\";\n\n        this.statement.executeUpdate(\"DROP TABLE IF EXISTS CUISINES\");\n        this.statement.executeUpdate(createCuisineTable);\n\n        String createLADatabase = \"CREATE TABLE LADATABASE \"\n                + \"(RESTAURANT_ID int NOT NULL UNIQUE PRIMARY KEY AUTO_INCREMENT, \"\n                + \"name varchar(255), \"\n                + \"url varchar(255), \"\n                + \"LOCATION_ID int, \"\n                + \"COST_ID int, \"\n                + \"CUISINE_ID int, \"\n                + \"address varchar(255), \"\n                + \"FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS (LOCATION_ID), \"\n                + \"FOREIGN KEY (COST_ID) REFERENCES COSTS (COST_ID), \"\n                + \"FOREIGN KEY (CUISINE_ID) REFERENCES CUISINES (CUISINE_ID)\"\n                + \")\";\n\n        this.statement.executeUpdate(\"DROP TABLE IF EXISTS LADATABASE\");\n        this.statement.executeUpdate(createLADatabase);\n    }\n\n    public void jsonToDatabase() throws IOException, SQLException, ParseException {\n        // Create method to parse JSON file into database\n        JSONParser parser = new JSONParser();\n\n        Object obj = parser.parse(new FileReader(\"LosAngelesData.json\"));\n\n        // Casts obj to JSONArray\n        JSONArray jsonArray = (JSONArray) obj;\n\n//        ResultSet rs = null;\n\n        // Iterates jsonArray to insert data into database\n        for (Object jsonElement : jsonArray) {\n            JSONObject jsonObject = (JSONObject) jsonElement;\n\n            // Inserts locations into locations table\n            //PreparedStatement locationStatement = conn.prepareStatement(\"insert IGNORE into LOCATIONS(location) values (?)\");\n            this.prepareStatement = conn.prepareStatement(\"insert IGNORE into LOCATIONS(location) values (?)\");\n\n            String location = (String) jsonObject.get(\"location\");\n            this.prepareStatement.setString(1, location);\n            this.prepareStatement.execute();\n\n            // Inserts costs into costs table\n            this.prepareStatement = conn.prepareStatement(\"insert IGNORE into COSTS (cost) values (?)\");\n            String cost = Long.toString((long) jsonObject.get(\"cost\"));\n            this.prepareStatement.setString(1, cost);\n            this.prepareStatement.execute();\n\n            // Inserts cuisines into cuisines table\n            this.prepareStatement = conn.prepareStatement(\"insert IGNORE into CUISINES (cuisine) values (?)\");\n            String cuisine = (String) jsonObject.get(\"cuisine\");\n            this.prepareStatement.setString(1, cuisine);\n            this.prepareStatement.execute();\n\n            // Inserts data into Los Angeles database\n            this.prepareStatement = conn.prepareStatement(\"insert into LADATABASE \"\n                    + \"(name, url, LOCATION_ID, COST_ID, CUISINE_ID, address) values (?, ?, ?, ?, ?, ?)\");\n\n            String name = (String) jsonObject.get(\"name\");\n            this.prepareStatement.setString(1, name);\n\n            String url = (String) jsonObject.get(\"url\");\n            this.prepareStatement.setString(2, url);\n\n            this.rs = this.statement.executeQuery(\"SELECT LOCATION_ID FROM LOCATIONS WHERE location=\" + \"'\" + location + \"'\");\n            if (this.rs.next()) {\n                int locationID = this.rs.getInt(\"LOCATION_ID\");\n                this.prepareStatement.setInt(3, locationID);\n            }\n\n            this.rs = this.statement.executeQuery(\"SELECT COST_ID FROM COSTS WHERE cost=\" + \"'\" + cost + \"'\");\n            if (this.rs.next()) {\n                int costID = this.rs.getInt(\"COST_ID\");\n                this.prepareStatement.setInt(4, costID);\n            }\n\n            this.rs = this.statement.executeQuery(\"SELECT CUISINE_ID FROM CUISINES WHERE cuisine=\" + \"'\" + cuisine + \"'\");\n            if (this.rs.next()) {\n                int cuisineID = this.rs.getInt(\"CUISINE_ID\");\n                this.prepareStatement.setInt(5, cuisineID);\n            }\n\n            String address = (String) jsonObject.get(\"address\");\n            this.prepareStatement.setString(6, address);\n\n            this.prepareStatement.execute();\n        }\n    }\n    public void disconnect() throws SQLException {\n        this.rs.close();\n        this.statement.close();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/edu/sjsu/cs151/JDBC.java b/src/main/java/edu/sjsu/cs151/JDBC.java
--- a/src/main/java/edu/sjsu/cs151/JDBC.java	(revision b38220953087112c7e2a69e1a84e4b47f3b3d3a5)
+++ b/src/main/java/edu/sjsu/cs151/JDBC.java	(date 1701260267557)
@@ -186,11 +186,11 @@
 
             String address = (String) jsonObject.get("address");
             this.prepareStatement.setString(6, address);
-
             this.prepareStatement.execute();
         }
     }
     public void disconnect() throws SQLException {
+        // Method closes connection to database
         this.rs.close();
         this.statement.close();
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"31e7b0d4-5bcb-4602-a3ab-bfbb2608b503\" name=\"Changes\" comment=\"test gitignore 2\">\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/RestaurantController.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/databaseDisplayControls/RestaurantDisplay.java\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/edu/sjsu/cs151/RestaurantScreen.fxml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/Controller.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/Controller.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/DetailsController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/DetailsController.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Interface\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2YITkQdHfxh3JYLKdMQbaS1pmjS\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\n    \"WebServerToolWindowFactoryState\": \"false\",\n    \"git-widget-placeholder\": \"irene\",\n    \"last_opened_file_path\": \"C:/Users/SJ/OneDrive - sjsu.edu/CS151/CS151-MichelinGuideLA/src/main/resources/edu/sjsu/cs151\",\n    \"node.js.detected.package.eslint\": \"true\",\n    \"node.js.detected.package.tslint\": \"true\",\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\n    \"nodejs_package_manager_path\": \"npm\",\n    \"project.structure.last.edited\": \"Problems\",\n    \"project.structure.proportion\": \"0.15\",\n    \"project.structure.side.proportion\": \"0.1150748\",\n    \"settings.editor.selected.configurable\": \"reference.projectsettings.compiler.javacompiler\",\n    \"vue.rearranger.settings.migration\": \"true\"\n  }\n}]]></component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\SJ\\OneDrive - sjsu.edu\\CS151\\CS151-MichelinGuideLA\\src\\main\\resources\\edu\\sjsu\\cs151\" />\n      <recent name=\"C:\\Users\\Irene Chen\\OneDrive - sjsu.edu\\CS151\\CS151-MichelinGuideLA\\src\\main\\resources\\edu\\sjsu\\cs151\" />\n      <recent name=\"C:\\Users\\Irene Chen\\OneDrive - sjsu.edu\\CS151\\CS151-MichelinGuideLA\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"C:\\Users\\SJ\\OneDrive - sjsu.edu\\CS151\\CS151-MichelinGuideLA\\diagrams\" />\n      <recent name=\"C:\\Users\\Irene Chen\\OneDrive - sjsu.edu\\CS151\\CS151-MichelinGuideLA\\src\\main\\java\\edu.sjsu.cs151.appControls\" />\n    </key>\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\n      <recent name=\"edu.sjsu.cs151\" />\n      <recent name=\"edu.sjsu.cs151.databaseDisplayControls\" />\n      <recent name=\"edu.sjsu.cs151.appControls\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"edu.sjsu.cs151.App\" />\n      <module name=\"CS151-MichelinGuideLA\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"31e7b0d4-5bcb-4602-a3ab-bfbb2608b503\" name=\"Changes\" comment=\"\" />\n      <created>1700212245327</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1700212245327</updated>\n      <workItem from=\"1700212266649\" duration=\"390000\" />\n      <workItem from=\"1700216015011\" duration=\"114000\" />\n      <workItem from=\"1700216312573\" duration=\"857000\" />\n      <workItem from=\"1700217230666\" duration=\"8000\" />\n      <workItem from=\"1700246733924\" duration=\"638000\" />\n      <workItem from=\"1700344615125\" duration=\"10008000\" />\n      <workItem from=\"1700512646284\" duration=\"472000\" />\n      <workItem from=\"1700635347177\" duration=\"4423000\" />\n      <workItem from=\"1700879218777\" duration=\"91000\" />\n      <workItem from=\"1701073852331\" duration=\"4256000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Added sequence, state, and use case diagrams. Need to update links after push\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700345132873</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700345132873</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"updated diagram README.md links\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700346011251</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700346011251</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Updated GUI for home screen and details screen: &#10;Allows search in each respective category by clicking location, cuisine, price buttons. On click, list of options is displayed below in scroll list. &#10;Allows selection from scroll list, which then displays the details on new screen. (currently empty details)&#10;(GUI does not use actual data from database yet.)\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700358200282</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700358200282</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"cleaned up code (hopefully more SOLID :) ) and tested a little more for ObservableLists\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1700639677658</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1700639677658</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Working database\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1701240798167</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1701240798167</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"test gitignore 2\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1701253450387</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1701253450387</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"7\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Added sequence, state, and use case diagrams. Need to update links after push\" />\n    <MESSAGE value=\"updated diagram README.md links\" />\n    <MESSAGE value=\"Updated GUI for home screen and details screen: &#10;Allows search in each respective category by clicking location, cuisine, price buttons. On click, list of options is displayed below in scroll list. &#10;Allows selection from scroll list, which then displays the details on new screen. (currently empty details)&#10;(GUI does not use actual data from database yet.)\" />\n    <MESSAGE value=\"cleaned up code (hopefully more SOLID :) ) and tested a little more for ObservableLists\" />\n    <MESSAGE value=\"Working database\" />\n    <MESSAGE value=\"test gitignore 2\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"test gitignore 2\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.sql.SQLException\" package=\"java.sql\" />\n          <option name=\"timeStamp\" value=\"1\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision b38220953087112c7e2a69e1a84e4b47f3b3d3a5)
+++ b/.idea/workspace.xml	(date 1701281756714)
@@ -4,13 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="31e7b0d4-5bcb-4602-a3ab-bfbb2608b503" name="Changes" comment="test gitignore 2">
-      <change afterPath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/RestaurantController.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/databaseDisplayControls/RestaurantDisplay.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/edu/sjsu/cs151/RestaurantScreen.fxml" afterDir="false" />
+    <list default="true" id="31e7b0d4-5bcb-4602-a3ab-bfbb2608b503" name="Changes" comment="Created JDBC methods">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/Controller.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/Controller.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/DetailsController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/DetailsController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/JDBC.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/edu/sjsu/cs151/JDBC.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -51,8 +47,8 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
     "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "irene",
-    "last_opened_file_path": "C:/Users/SJ/OneDrive - sjsu.edu/CS151/CS151-MichelinGuideLA/src/main/resources/edu/sjsu/cs151",
+    "git-widget-placeholder": "anniebluu",
+    "last_opened_file_path": "C:/Users/SJ/Downloads/mysql-connector-j-8.2.0/mysql-connector-j-8.2.0/mysql-connector-j-8.2.0.jar",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
@@ -67,7 +63,6 @@
 }]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
-      <recent name="C:\Users\SJ\OneDrive - sjsu.edu\CS151\CS151-MichelinGuideLA\src\main\resources\edu\sjsu\cs151" />
       <recent name="C:\Users\Irene Chen\OneDrive - sjsu.edu\CS151\CS151-MichelinGuideLA\src\main\resources\edu\sjsu\cs151" />
       <recent name="C:\Users\Irene Chen\OneDrive - sjsu.edu\CS151\CS151-MichelinGuideLA" />
     </key>
@@ -149,13 +144,13 @@
       <option name="project" value="LOCAL" />
       <updated>1701240798167</updated>
     </task>
-    <task id="LOCAL-00006" summary="test gitignore 2">
+    <task id="LOCAL-00006" summary="Created JDBC methods">
       <option name="closed" value="true" />
-      <created>1701253450387</created>
+      <created>1701259008626</created>
       <option name="number" value="00006" />
       <option name="presentableId" value="LOCAL-00006" />
       <option name="project" value="LOCAL" />
-      <updated>1701253450387</updated>
+      <updated>1701259008626</updated>
     </task>
     <option name="localTasksCounter" value="7" />
     <servers />
@@ -180,8 +175,8 @@
     <MESSAGE value="Updated GUI for home screen and details screen: &#10;Allows search in each respective category by clicking location, cuisine, price buttons. On click, list of options is displayed below in scroll list. &#10;Allows selection from scroll list, which then displays the details on new screen. (currently empty details)&#10;(GUI does not use actual data from database yet.)" />
     <MESSAGE value="cleaned up code (hopefully more SOLID :) ) and tested a little more for ObservableLists" />
     <MESSAGE value="Working database" />
-    <MESSAGE value="test gitignore 2" />
-    <option name="LAST_COMMIT_MESSAGE" value="test gitignore 2" />
+    <MESSAGE value="Created JDBC methods" />
+    <option name="LAST_COMMIT_MESSAGE" value="Created JDBC methods" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
